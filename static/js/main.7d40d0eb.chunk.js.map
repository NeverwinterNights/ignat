{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h5/Header.module.css"],"names":["module","exports","Error404","Junior","Message","props","className","style","message","avatar","src","alt","main","name","line","press","time","messageData","HW1","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","useState","allClass","filter","s","active","btn","allHigh","allMiddle","allLow","setFilter","defaultAffairs","priority","HW2","affairs","setAffairs","filteredAffairs","filterAffairs","f","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","value","onChange","GreetingContainer","setName","setError","users","length","e","newName","currentTarget","addUserCallback","alert","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","PreJunior","JuniorPlus","PATH","Routes","path","exact","render","to","Header","styles","nav_main","link","activeClassName","button","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7d40d0eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1ComQ\",\"avatar\":\"Message_avatar__1V6U6\",\"main\":\"Message_main__2wcfH\",\"name\":\"Message_name__15Ht6\",\"press\":\"Message_press__3eEtr\",\"line\":\"Message_line__3JeL0\",\"time\":\"Message_time__2B7QE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2mrRn\",\"spanClassName\":\"SuperCheckbox_spanClassName__19NRm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1RPdi\",\"errorInput\":\"SuperInputText_errorInput__3lfJ3\",\"error\":\"SuperInputText_error__1OiYA\",\"testSpanError\":\"SuperInputText_testSpanError__3tucj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2bdQt\",\"column\":\"HW4_column__3cvXi\",\"testSpanError\":\"HW4_testSpanError__28ktu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__Mc8_4\",\"red\":\"SuperButton_red__1k_qC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2sqLX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2Mfg6\",\"error\":\"Greeting_error__572_X\"};","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react';\r\n\r\nexport const Junior =() => {\r\n return (\r\n        <div>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab, animi beatae delectus dolor ducimus excepturi expedita, explicabo labore mollitia nesciunt optio perspiciatis quasi qui quibusdam repellat saepe sequi sit soluta.</p>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react'\nimport style from \"./Message.module.css\";\n\ntype  MessagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\n\n\n\nfunction Message (props: MessagePropsType) {\n    return (\n        <div className={style.message}>\n            <div className={style.avatar}>\n                <img src={props.avatar} alt=\"\"/>\n            </div>\n            <div className={style.main}>\n                <div className={style.name}>{props.name}</div>\n                <div className={style.line}>\n                    <span className={style.press}>{props.message}</span>\n                    <div className={style.time}>{props.time}</div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Message\n\n","import React from 'react'\nimport Message from './Message'\nimport style from './Message.module.css'\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Artem',\n    message: 'NPM Start нажимал?',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType// need to fix any\n    deleteAffairCallback: (_id:number)=>void// need to fix any\n}\n\nfunction Affair (props: AffairPropsType) {\n    const deleteCallback = () => {\n       props.deleteAffairCallback(props.affair._id)\n    }\n\n    return (\n        <div>\n            <ul>\n                <li> Тебе следует учить {props.affair.name}\n                    <button onClick={deleteCallback}>X</button>\n\n                </li>\n            </ul>\n\n        </div>\n    )\n}\n\nexport default Affair\n","import React, {useState} from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType> // непонятно\n    setFilter: (value: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n    filter: FilterType\n}\n\n\nfunction Affairs (props: AffairsPropsType) {\n    const mappedAffairs = props.data.map ((a: AffairType) => (\n\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n\n    ))\n\n\n    const style = {\n        // backgroundColor: props.on ? \"green\" : \"none\"\n    }\n\n\n    const setAll = () => {\n\n        props.setFilter (\"all\")\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter (\"high\")\n    }\n    const setMiddle = () => {\n        props.setFilter (\"middle\")\n    }\n    const setLow = () => {\n        props.setFilter (\"low\")\n    }\n\n    const [toggle,setToggle] = useState<boolean>(  false)\n\n        const allClass = props.filter === 'all' ? ` ${s.active}` : `${s.btn}`;\n        const allHigh = props.filter === 'high' ? ` ${s.active}` : `${s.btn}`;\n        const allMiddle = props.filter === 'middle' ? ` ${s.active}` : `${s.btn}`;\n        const allLow = props.filter === 'low' ? `${s.active}` : `${s.btn}`;\n\n    return (\n        <div>\n\n\n            {mappedAffairs}\n\n            <button onClick={setAll} className={allClass}>All</button>\n            <button onClick={setHigh} className={allHigh}>High</button>\n            <button onClick={setMiddle} className={allMiddle}>Middle</button>\n            <button onClick={setLow} className={allLow}>Low</button>\n\n\n\n\n        </div>\n\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = \"low\" | \"middle\" | \"high\" // any need to fix any\nexport type AffairType = {    // any need to fix any\n    _id: number\n    name: string\n    priority: string\n\n}   // anyneed to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n\n\n]\n\nlet on: boolean = true;\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType):  Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n    else return affairs.filter (a => a.priority === filter);\n\n\n\n   //      if (filter === 'high') return affairs.filter (a => a.priority === 'high');\n   //  else if (filter === 'middle') return affairs.filter (a => a.priority === 'middle');\n   // else return affairs.filter (a => a.priority === 'low');\n}\n\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter (f => f._id !== _id);\n}\n\n\nfunction HW2 () {\n    const [affairs, setAffairs] = useState<Array<AffairType>> (defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType> ('all')\n\n    const filteredAffairs = filterAffairs (affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs (deleteAffair (affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter={filter}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void  //  any  need to fix any\n    addUser: () => void  // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : \"\"  // need to fix with (?:)\n\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <span>{error}</span>\n            <button onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    );\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingPropsType = {\n    users: Array<UserType>// anyneed to fix any\n    addUserCallback: (name: string) => void  // need to fix any\n}\n\n// более простой и понятный для новичков\nfunction GreetingContainer (props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\n// const GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string> ('') // need to fix any\n    const [error, setError] = useState<string> ('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        let newName = e.currentTarget.value\n        if (newName) {\n            setName (newName)\n            setError(\"\")\n        }   else {\n            setName (\"\")\n            setError (\"Вводи имя\")\n        }\n    }\n    const addUser = () => {\n        if(name) {\n            props.addUserCallback (name)\n            alert (`Hello ${name} !`) // need to fix\n        } else {\n            setError (\"Вводи имя\")\n        }\n\n    }\n\n    const totalUsers = props.users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3 () {\n    const [users, setUsers] = useState<Array<UserType>> ([]) // need to fix any\n\n    const addUserCallback = (name: string) => {\n        const user = {\n            _id: v1 (),\n            name: name\n        }\n\n        // need to fix any\n        setUsers ([user, ...users]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput: s.superInput}    ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n\n\n       //\n       // if (onChangeChecked) {\n       //     onChangeChecked (e.currentTarget.checked)\n       //\n       // }\n\n\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n\n\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n            {children && <span className={s.spanClassName}>{children}</span>}\n            {children && <span className={s.spanClassName}>{children}</span>}\n            {children && <span className={s.spanClassName}>{children}</span>}\n            {children && <span className={s.spanClassName}>{children}</span>}\n\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                   // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n                <SuperButton/>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react';\r\n\r\nexport const JuniorPlus =() => {\r\n return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react'\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport Error404 from \"./pages/Error404\";\nimport { Junior } from './pages/Junior';\nimport PreJunior from \"./pages/PreJunior\";\nimport {JuniorPlus} from \"./pages/JuniorPlus\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus'\n    // add paths\n}\n\nfunction Routes () {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n                // add routes\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport {PATH} from \"./Routes\";\nimport styles from  \"./Header.module.css\"\n\nfunction Header() {\n    return (\n        <nav className={styles.nav_main}>\n\n           <NavLink to={PATH.PRE_JUNIOR}  className={styles.link} activeClassName={styles.active}>Pre Junior</NavLink>\n           <NavLink to={PATH.JUNIOR} className={styles.link} activeClassName={styles.active}>Junior</NavLink>\n          <NavLink to={PATH.JUNIOR_PLUS} className={styles.link} activeClassName={styles.active}>Junior+</NavLink>\n\n            <div className={styles.button}></div>\n\n\n        </nav>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { HashRouter } from 'react-router-dom'\nimport Header from './Header'\nimport Routes from './Routes'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n           <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from '../../../p2-homeworks/h5/HW5';\n\nfunction App () {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Affairs_active__1EdBw\",\"btn\":\"Affairs_btn__uispY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_main\":\"Header_nav_main__1mwSc\",\"link\":\"Header_link__2Nv_h\",\"button\":\"Header_button__16hb6\"};"],"sourceRoot":""}